import { IUnfilledAtt, Optional } from "@utils/base-class/base.interface";
import { AllowNull, Column, Default, ForeignKey, Model, Table } from "sequelize-typescript";
import { Loyalty } from "./Loyalty";
import { Tier } from "./Tier";
import { Member } from "./Member";

type INullableAttr =  IUnfilledAtt;

interface IAutoGeneratedAttr {
  id: number;
}

export interface IModel extends Optional<INullableAttr>, IAutoGeneratedAttr {
  loyaltyId: number;
  memberId: number;
  tierId: number;
}

export type IModelCreate = Omit<IModel, keyof IAutoGeneratedAttr> & Partial<IAutoGeneratedAttr>;

@Table({
  tableName: 'member_tiers',
  indexes: [
    { fields: ['loyalty_id', 'member_id'], where: { deleted_at: null }},
  ],
  timestamps: false,
})
export class MemberTier extends Model<IModel, IModelCreate> implements IModel {
  declare id: number;

  @ForeignKey(() => Loyalty)
  @AllowNull(false)
  @Column
  declare loyaltyId: number;

  @ForeignKey(() => Member)
  @AllowNull(false)
  @Column
  declare memberId: number;

  @ForeignKey(() => Tier)
  @AllowNull(false)
  @Column
  declare tierId: number;
}